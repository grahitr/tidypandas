reticulate::repl_python()
readr::write_csv(iris, "iris.csv")
reticulate::repl_python()
library("tidtverse")
library("tidyverse")
iris %>% slice(c(1,1,2))
reticulate::repl_python()
reticulate::source_python('~/personal/tidypandas/package_tidypandas/tidyGroupedDataFrame.py')
reticulate::repl_python()
library("tidyverse")
import numpy
reticulate::repl_python()
pacman::p_load("CausalImpact")
set.seed(1)
x1 = 100 + arima.sim(model = list(ar = 0.999), n = 100)
y = 1.2 * x1 + rnorm(100)
y[71:100] <- y[71:100] + 10
data <- cbind(y, x1)
set.seed(1)
x1 = 100 + arima.sim(model = list(ar = 0.999), n = 100)
y = 1.2 * x1 + rnorm(100)
y[71:100] = y[71:100] + 10
data = cbind(y, x1)
data
plot(data)
y = 1.2 * x1 + rnorm(10)
y[71:100] = y[71:100] + 10
data = cbind(y, x1)
data
plot(data)
data[1:70,]
plot(data[1:70,])
data[1:70,]
plot(data[1:70])
data[1:70]
data
plot(subset(data, 1:70))
subset(data, 1:70)
plot(subset(data, start = 1, end = 70))
plot(subset(data[1,], start = 1, end = 70))
plot(subset(y, start = 1, end = 70))
y
pre_data = cbind(y[1:70], x1[1:70])
plot(pre_data)
pre_data
pre_data = cbind(subset(y, start = 1, end = 70),
subset(x, start = 1, end = 70)
)
pre_data = cbind(subset(y, start = 1, end = 70),
subset(x1, start = 1, end = 70)
)
x1
y
set.seed(1)
x1 = 100 + arima.sim(model = list(ar = 0.999), n = 100)
y = 1.2 * x1 + rnorm(10)
y[71:100] = y[71:100] + 10
data = cbind(y, x1)
data
subset(y, start = 1, end = 70)
pacman::p_load("CausalImpact", "forecast")
pre_data = cbind(subset(y, start = 1, end = 70),
subset(x1, start = 1, end = 70)
)
pre_data
plot(pre_data)
full_data = cbind(y, x1)
subset(full_data, start = 1, end = 70)
full_data = cbind(y, x1)
pre_data = subset(full_data, start = 1, end = 70)
plot(pre_data)
pre_data %>%
as_tibble()
pre_data %>%
as_tibble() %>%
rowid_to_column() %>%
pivot_longer(cols = -rowid, names_to = "ts_type")
pre_data %>%
as_tibble() %>%
rowid_to_column() %>%
pivot_longer(cols = -rowid, names_to = "ts_type") %>%
mutate(ts_type = factor(ts_type)) %>%
ggplot(aes(rowid, value, color = ts_type))
pre_data %>%
as_tibble() %>%
rowid_to_column() %>%
pivot_longer(cols = -rowid, names_to = "ts_type") %>%
mutate(ts_type = factor(ts_type)) %>%
ggplot(aes(rowid, value, color = ts_type), group = ts_type) +
geom_line()
set.seed(1)
other_geo = 100 + arima.sim(model = list(ar = 0.999), n = 100)
interest = 1.2 * other_geo + rnorm(10)
interest[71:100] = interest[71:100] + 10
full_data = cbind(interest, other_geo)
pre_data = subset(full_data, start = 1, end = 70)
pre_data %>%
as_tibble() %>%
rowid_to_column() %>%
pivot_longer(cols = -rowid, names_to = "ts_type") %>%
mutate(ts_type = factor(ts_type)) %>%
ggplot(aes(rowid, value, color = ts_type), group = ts_type) +
geom_line()
full_data %>%
as_tibble() %>%
rowid_to_column() %>%
pivot_longer(cols = -rowid, names_to = "ts_type") %>%
mutate(ts_type = factor(ts_type)) %>%
ggplot(aes(rowid, value, color = ts_type), group = ts_type) +
geom_line()
full_data %>%
as_tibble() %>%
rowid_to_column() %>%
pivot_longer(cols = -rowid, names_to = "ts_type") %>%
mutate(ts_type = factor(ts_type)) %>%
ggplot(aes(rowid, value, color = ts_type), group = ts_type) +
geom_line() +
geom_vline(xintercept = 70)
impact = CausalImpact(full_data
, pre.period = c(1, 70)
, post.period = c(71, 100)
)
impact
plot(impact)
interest[71:100] = interest[71:100] + rnorm(30, 10, 5)
full_data = cbind(interest, other_geo)
pre_data = subset(full_data, start = 1, end = 70)
pre_data %>%
as_tibble() %>%
rowid_to_column() %>%
pivot_longer(cols = -rowid, names_to = "ts_type") %>%
mutate(ts_type = factor(ts_type)) %>%
ggplot(aes(rowid, value, color = ts_type), group = ts_type) +
geom_line()
full_data %>%
as_tibble() %>%
rowid_to_column() %>%
pivot_longer(cols = -rowid, names_to = "ts_type") %>%
mutate(ts_type = factor(ts_type)) %>%
ggplot(aes(rowid, value, color = ts_type), group = ts_type) +
geom_line() +
geom_vline(xintercept = 70)
impact = CausalImpact(full_data
, pre.period = c(1, 70)
, post.period = c(71, 100)
)
impact
plot(impact)
set.seed(1)
other_geo = 100 + arima.sim(model = list(ar = 0.999), n = 100)
interest = 1.2 * other_geo + rnorm(10)
interest[71:100] = interest[71:100] + c(rnorm(20, 10, 5), rnorm(10, 0, 1))
full_data = cbind(interest, other_geo)
pre_data = subset(full_data, start = 1, end = 70)
full_data %>%
as_tibble() %>%
rowid_to_column() %>%
pivot_longer(cols = -rowid, names_to = "ts_type") %>%
mutate(ts_type = factor(ts_type)) %>%
ggplot(aes(rowid, value, color = ts_type), group = ts_type) +
geom_line() +
geom_vline(xintercept = 70)
impact = CausalImpact(full_data
, pre.period = c(1, 70)
, post.period = c(71, 100)
)
impact
plot(impact)
impact$summary()
impact$summary
pacman::p_load("CausalImpact", "forecast")
#-------------------------------------------------------------------------------
# generate some data point from ARIMA process
set.seed(1)
other_geo        = 100 + arima.sim(model = list(ar = 0.999), n = 100)
other_geo
# Create a variant with some multiplying factor and gaussian noise
interest         = 1.2 * other_geo + rnorm(10)
interest
# add a bump for 20 points from 71-90 and then gaussian noise from 91-100
interest[71:100] = interest[71:100] + c(rnorm(20, 10, 5), rnorm(10, 0, 1))
full_data = cbind(interest, other_geo)
# visualize the created ts
full_data %>%
as_tibble() %>%
rowid_to_column() %>%
pivot_longer(cols = -rowid, names_to = "ts_type") %>%
mutate(ts_type = factor(ts_type)) %>%
ggplot(aes(rowid, value, color = ts_type), group = ts_type) +
geom_line() +
geom_vline(xintercept = 70)
pacman::p_load("CausalImpact", "forecast", "tidyverse")
# visualize the created ts
full_data %>%
as_tibble() %>%
rowid_to_column() %>%
pivot_longer(cols = -rowid, names_to = "ts_type") %>%
mutate(ts_type = factor(ts_type)) %>%
ggplot(aes(rowid, value, color = ts_type), group = ts_type) +
geom_line() +
geom_vline(xintercept = 70)
full_data
# fit a causal impact model
impact = CausalImpact(full_data,
pre.period = c(1, 70),
post.period = c(71, 100)
)
# analyse and understand the results
impact
plot(impact)
impact$summary
# visualize the created ts
full_data %>%
as_tibble() %>%
rowid_to_column() %>%
pivot_longer(cols = -rowid, names_to = "ts_type") %>%
mutate(ts_type = factor(ts_type)) %>%
ggplot(aes(rowid, value, color = ts_type), group = ts_type) +
geom_line() +
geom_vline(xintercept = 70)
XML::xmlToDataFrame("~/Downloads/primary_london_gcpvj47.stat.xml"
#, colClasses = list("integer", NULL, "numeric")
)
pacman::p_install("XML")
XML::xmlToDataFrame("~/Downloads/primary_london_gcpvj47.stat.xml"
#, colClasses = list("integer", NULL, "numeric")
)
jsonlite::read_json("~/Downloads/primary_london_gcpvj47.stat.json")
jsonlite::read_json("~/Downloads/primary_london_gcpvj47.stat (1).json")
jsonlite::read_json("~/Downloads/primary_london_gcpvj47.stat (1).json", simplifyVector = T)
jsonlite::read_json("~/Downloads/a.json"
, simplifyVector = T
)
jsonlite::read_json("~/Downloads/a.json"
, simplifyVector = T
) %>%
pluck("streets")
jsonlite::read_json("~/Downloads/a.json"
, simplifyVector = T
) %>%
pluck("streets") %>%
glimpse()
jsonlite::read_json("~/Downloads/a.json"
, simplifyVector = T
) %>%
pluck("streets") %>%
mutate(`@polulation` = as.integer(`@population`))
jsonlite::read_json("~/Downloads/a.json"
, simplifyVector = T
) %>%
pluck("streets") %>%
mutate(`@polulation` = round(as.integer(`@population`), 2))
jsonlite::read_json("~/Downloads/a.json"
, simplifyVector = T
) %>%
pluck("streets") %>%
mutate(pop = round(as.integer(`@population`), 2))
streets = jsonlite::read_json("~/Downloads/a.json"
, simplifyVector = T
) %>%
pluck("streets")
streets
streets = jsonlite::read_json("~/Downloads/a.json"
, simplifyVector = T
) %>%
pluck("streets") %>%
rename(edge = `@edge`)
streets
streets = jsonlite::read_json("~/Downloads/a.json"
, simplifyVector = T
) %>%
pluck("streets") %>%
rename(edge = `@edge`
, population = `@population`
, workPosition = `@workPosition`
)
streets
streets %>%
mutate(population = round(as.integer(population), 2))
streets %>%
mutate(population = round(bit64::as.integer64(population), 2))
library("bit64")
streets %>%
mutate(population = round(as.integer64(population), 2))
streets %>%
mutate(population = round(as.numeric(population), 2))
streets = jsonlite::read_json("~/Downloads/a.json"
, simplifyVector = T
) %>%
pluck("streets") %>%
rename(edge = `@edge`
, population = `@population`
, workPosition = `@workPosition`
)
streets
streets %>%
mutate(population = round(as.numeric(population), 2))
streets %>%
mutate(population = as.character(round(as.numeric(population), 2))) %>%
streets %>%
mutate(population = as.character(round(as.numeric(population), 2)))
streets %>%
mutate(population = as.character(round(as.numeric(population), 2)))
streets %>%
as_tible() %>%
mutate(population = as.character(round(as.numeric(population), 2)))
streets %>%
as_tibble() %>%
mutate(population = as.character(round(as.numeric(population), 2)))
streets %>%
as_tibble() %>%
mutate(population = as.character(round(as.numeric(population), 2))) %>%
setNames(c("@edge", "@population", "@workPosition"))
streets %>%
as_tibble() %>%
mutate(population = as.character(round(as.numeric(population), 2))) %>%
setNames(c("@edge", "@population", "@workPosition")) %>%
jsonlite::toJSON()
streets %>%
as_tibble() %>%
mutate(population = as.character(round(as.numeric(population), 2))) %>%
setNames(c("@edge", "@population", "@workPosition")) %>%
list(streets = .) %>%
jsonlite::toJSON()
jsonlite::read_json("~/Downloads/a.json"
, simplifyVector = T
)
streets %>%
as_tibble() %>%
mutate(population = as.character(round(as.numeric(population), 2))) %>%
setNames(c("@edge", "@population", "@workPosition")) %>%
list(streets = .) %>%
jsonlite::write_json("~/Downloads/a_2.json")
streets %>%
as_tibble() %>%
mutate(population = as.character(round(as.numeric(population), 2))) %>%
setNames(c("@edge", "@population", "@workPosition")) %>%
list(streets = .) %>%
xml2::write_xml()
streets %>%
as_tibble() %>%
mutate(population = as.character(round(as.numeric(population), 2))) %>%
setNames(c("@edge", "@population", "@workPosition")) %>%
list(streets = .) %>%
xml2::write_xml("~/Downloads/temp.xml")
streets %>%
as_tibble() %>%
mutate(population = as.character(round(as.numeric(population), 2))) %>%
setNames(c("@edge", "@population", "@workPosition")) %>%
list(streets = .) %>%
xml2::as_xml_document()
streets %>%
as_tibble() %>%
mutate(population = as.character(round(as.numeric(population), 2))) %>%
setNames(c("@edge", "@population", "@workPosition")) %>%
list(streets = .) %>%
xml2::as_xml_document() %>%
xml2::write_xml("~/Downloads/temp.xml")
streets %>%
as_tibble() %>%
mutate(population = as.character(round(as.numeric(population), 2))) %>%
setNames(c("@edge", "@population", "@workPosition")) %>%
#list(streets = .) %>%
xml2::as_xml_document()
streets %>%
as_tibble() %>%
mutate(population = as.character(round(as.numeric(population), 2))) %>%
setNames(c("@edge", "@population", "@workPosition")) %>%
as.list() %>%
#list(streets = .) %>%
xml2::as_xml_document()
streets %>%
as_tibble() %>%
mutate(population = as.character(round(as.numeric(population), 2))) %>%
setNames(c("@edge", "@population", "@workPosition")) %>%
list(streets = .)
import copy
reticulate::repl_python()
